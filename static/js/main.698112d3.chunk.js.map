{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistic/Statistic.module.css","components/Profile/Profile.js","js/random-bg-color.js","components/Statistic/Statistic.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","username","tag","location","avatar","stats","className","styles","profile","description","src","alt","name","label","quantity","followers","views","likes","randomNumber","Math","floor","random","randomColor","Statistic","title","statistics","list","map","id","percentage","bgColor","item","style","backgroundColor","App","user","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,MAAQ,uBAAuB,SAAW,4B,gBCAvSD,EAAOC,QAAU,CAAC,WAAa,8BAA8B,MAAQ,yBAAyB,KAAO,wBAAwB,KAAO,wBAAwB,MAAQ,yBAAyB,WAAa,gC,knBC0C3LC,MAxCf,YAA8D,IAA3CC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,MAClD,OACE,sBAAKC,UAAWC,IAAOC,QAAvB,UACE,sBAAKF,UAAWC,IAAOE,YAAvB,UACE,qBAAKC,IAAKN,EAAQO,IAAI,cAAcL,UAAWC,IAAOH,SACtD,mBAAGE,UAAWC,IAAOK,KAArB,SAA4BX,IAC5B,oBAAGK,UAAWC,IAAOL,IAArB,cAA4BA,KAC5B,mBAAGI,UAAWC,IAAOJ,SAArB,SAAgCA,OAGlC,qBAAIG,UAAWC,IAAOF,MAAtB,UACE,+BACE,sBAAMC,UAAWC,IAAOM,MAAxB,uBACA,sBAAMP,UAAWC,IAAOO,SAAxB,SAAmCT,EAAMU,eAE3C,+BACE,sBAAMT,UAAWC,IAAOM,MAAxB,mBACA,sBAAMP,UAAWC,IAAOO,SAAxB,SAAmCT,EAAMW,WAE3C,+BACE,sBAAMV,UAAWC,IAAOM,MAAxB,mBACA,sBAAMP,UAAWC,IAAOO,SAAxB,SAAmCT,EAAMY,kBCpBnD,SAASC,IACP,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,UAGVC,MARf,WACE,MAAM,OAAN,OAAcJ,IAAd,aAAiCA,IAAjC,aAAoDA,IAApD,M,gBCoCaK,MAjCf,YAAsC,IAAjBC,EAAgB,EAAhBA,MAAOnB,EAAS,EAATA,MAC1B,OACE,0BAASC,UAAWC,IAAOkB,WAA3B,UACGD,GAAS,oBAAIlB,UAAWC,IAAOiB,MAAtB,SAA8BA,IACxC,oBAAIlB,UAAWC,IAAOmB,KAAtB,SACGrB,EAAMsB,KAAI,YAAgC,IAA7BC,EAA4B,EAA5BA,GAAIf,EAAwB,EAAxBA,MAAOgB,EAAiB,EAAjBA,WACjBC,EAAUR,IAChB,OACE,qBACEhB,UAAWC,IAAOwB,KAElBC,MAAO,CAAEC,gBAAiBH,GAH5B,UAKE,sBAAMxB,UAAWC,IAAOM,MAAxB,SAAgCA,IAChC,uBAAMP,UAAWC,IAAOsB,WAAxB,UAAqCA,EAArC,SAJKD,Y,cCSJM,MAhBf,WACE,OACE,qCACE,cAAC,EAAD,CACEjC,SAAUkC,EAAKlC,SACfC,IAAKiC,EAAKjC,IACVC,SAAUgC,EAAKhC,SACfC,OAAQ+B,EAAK/B,OACbC,MAAO8B,EAAK9B,QAEd,cAAC,EAAD,CAAWmB,MAAM,eAAenB,MAAO+B,IACvC,cAAC,EAAD,CAAW/B,MAAO+B,QCNTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.698112d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2hBpn\",\"description\":\"Profile_description__2WJbA\",\"avatar\":\"Profile_avatar__2VYYT\",\"name\":\"Profile_name__2mHTH\",\"tag\":\"Profile_tag__3y9E5\",\"location\":\"Profile_location__2O4Cz\",\"stats\":\"Profile_stats__2KNNT\",\"label\":\"Profile_label__1IMvr\",\"quantity\":\"Profile_quantity__3RsFO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistic_statistics__35_nt\",\"title\":\"Statistic_title__3fM5X\",\"list\":\"Statistic_list__KQj8T\",\"item\":\"Statistic_item__1pO19\",\"label\":\"Statistic_label__26iFu\",\"percentage\":\"Statistic_percentage__1xtiB\"};","import styles from './Profile.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Profile({ username, tag, location, avatar, stats }) {\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img src={avatar} alt=\"User avatar\" className={styles.avatar} />\n        <p className={styles.name}>{username}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quantity}>{stats.followers}</span>\n        </li>\n        <li>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quantity}>{stats.views}</span>\n        </li>\n        <li>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  avatar: PropTypes.string,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Profile;\n","function randomColor() {\n  return `rgb(${randomNumber()}, ${randomNumber()}, ${randomNumber()})`;\n}\n\nfunction randomNumber() {\n  return Math.floor(Math.random() * 256);\n}\n\nexport default randomColor;\n","import PropTypes from 'prop-types';\nimport randomColor from 'js/random-bg-color';\nimport styles from './Statistic.module.css';\n\nfunction Statistic({ title, stats }) {\n  return (\n    <section className={styles.statistics}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n      <ul className={styles.list}>\n        {stats.map(({ id, label, percentage }) => {\n          const bgColor = randomColor();\n          return (\n            <li\n              className={styles.item}\n              key={id}\n              style={{ backgroundColor: bgColor }}\n            >\n              <span className={styles.label}>{label}</span>\n              <span className={styles.percentage}>{percentage}%</span>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n}\n\nStatistic.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default Statistic;\n","// import logo from './logo.svg';\n// import './App.css';\nimport Profile from 'components/Profile/Profile';\nimport Statistic from 'components/Statistic/Statistic';\nimport user from './database/user.json';\nimport data from './database/data.json';\n\nfunction App() {\n  return (\n    <>\n      <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistic title=\"Upload stats\" stats={data} />\n      <Statistic stats={data} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}