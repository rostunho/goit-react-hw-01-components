{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistic/Statistic.module.css","components/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/Profile/Profile.jsx","js/random-bg-color.js","components/Statistic/Statistic.jsx","components/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","index.js"],"names":["module","exports","Profile","username","tag","location","avatar","stats","className","styles","profile","description","src","alt","name","label","quantity","followers","views","likes","randomNumber","Math","floor","random","randomColor","Statistic","title","statistics","list","map","id","percentage","bgColor","item","style","backgroundColor","FriendListItem","isOnline","online","offline","width","FriendList","friends","friendList","TransactionHistory","transactions","transactionHistory","tableRow","type","amount","currency","App","user","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3e793f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2hBpn\",\"description\":\"Profile_description__2WJbA\",\"avatar\":\"Profile_avatar__2VYYT\",\"name\":\"Profile_name__2mHTH\",\"tag\":\"Profile_tag__3y9E5\",\"location\":\"Profile_location__2O4Cz\",\"stats\":\"Profile_stats__2KNNT\",\"label\":\"Profile_label__1IMvr\",\"quantity\":\"Profile_quantity__3RsFO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1d4yU\",\"title\":\"TransactionHistory_title__atgg2\",\"tableRow\":\"TransactionHistory_tableRow__23vRF\",\"type\":\"TransactionHistory_type__3M9Y8\",\"amount\":\"TransactionHistory_amount__1LaSH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistic_statistics__35_nt\",\"title\":\"Statistic_title__3fM5X\",\"list\":\"Statistic_list__KQj8T\",\"item\":\"Statistic_item__1pO19\",\"label\":\"Statistic_label__26iFu\",\"percentage\":\"Statistic_percentage__1xtiB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__2vFs9\",\"online\":\"FriendListItem_online__202_M\",\"offline\":\"FriendListItem_offline__14oTq\",\"avatar\":\"FriendListItem_avatar__eDBJw\",\"name\":\"FriendListItem_name__a7X1x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__3B6Jy\"};","import styles from './Profile.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Profile({ username, tag, location, avatar, stats }) {\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img src={avatar} alt=\"User avatar\" className={styles.avatar} />\n        <p className={styles.name}>{username}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quantity}>{stats.followers}</span>\n        </li>\n        <li>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quantity}>{stats.views}</span>\n        </li>\n        <li>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  avatar: PropTypes.string,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Profile;\n","function randomColor() {\n  return `rgb(${randomNumber()}, ${randomNumber()}, ${randomNumber()})`;\n}\n\nfunction randomNumber() {\n  return Math.floor(Math.random() * 256);\n}\n\nexport default randomColor;\n","import PropTypes from 'prop-types';\nimport randomColor from 'js/random-bg-color';\nimport styles from './Statistic.module.css';\n\nfunction Statistic({ title, stats }) {\n  return (\n    <section className={styles.statistics}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n      <ul className={styles.list}>\n        {stats.map(({ id, label, percentage }) => {\n          const bgColor = randomColor();\n          return (\n            <li\n              className={styles.item}\n              key={id}\n              style={{ backgroundColor: bgColor }}\n            >\n              <span className={styles.label}>{label}</span>\n              <span className={styles.percentage}>{percentage}%</span>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n}\n\nStatistic.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default Statistic;\n","import styles from './FriendListItem.module.css';\nimport PropTypes from 'prop-types';\n\nfunction FriendListItem({ id, avatar, name, isOnline }) {\n  return (\n    <li className={styles.item} key={id}>\n      <span className={isOnline ? styles.online : styles.offline}></span>\n      <img\n        className={styles.avatar}\n        src={avatar}\n        alt=\"User avatar\"\n        width=\"48\"\n      />\n      <p className={styles.name}>{name}</p>\n    </li>\n  );\n}\n\nFriendListItem.propTypes = {\n  id: PropTypes.number,\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import FriendListItem from 'components/FriendListItem/FriendListItem';\nimport styles from './FriendList.module.css';\nimport PropTypes from 'prop-types';\n\nfunction FriendList({ friends }) {\n  return (\n    <ul className={styles.friendList}>\n      {friends.map(({ id, avatar, name, isOnline }) => (\n        <FriendListItem\n          key={id}\n          avatar={avatar}\n          name={name}\n          isOnline={isOnline}\n        />\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n    }),\n  ),\n};\n\nexport default FriendList;\n","import styles from './TransactionHistory.module.css';\nimport PropTypes from 'prop-types';\n\nfunction TransactionHistory({ transactions }) {\n  return (\n    <table className={styles.transactionHistory}>\n      <thead>\n        <tr className={styles.tableRow}>\n          <th className={styles.title}>Type</th>\n          <th className={styles.title}>Amount</th>\n          <th className={styles.title}>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions.map(({ id, type, amount, currency }) => {\n          return (\n            <tr key={id} className={styles.tableRow}>\n              <td className={styles.type}>{type}</td>\n              <td className={styles.amount}>{amount}</td>\n              <td className={styles.currency}>{currency}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import Profile from 'components/Profile/Profile';\nimport Statistic from 'components/Statistic/Statistic';\nimport FriendList from 'components/FriendList/FriendList';\nimport TransactionHistory from 'components/TransactionHistory/TransactionHistory';\nimport user from './database/user.json';\nimport data from './database/data.json';\nimport friends from './database/friends.json';\nimport transactions from './database/transactions.json';\n\nfunction App() {\n  return (\n    <>\n      <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistic title=\"Upload stats\" stats={data} />\n      <Statistic stats={data} />\n      <FriendList friends={friends} />\n      <TransactionHistory transactions={transactions} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}